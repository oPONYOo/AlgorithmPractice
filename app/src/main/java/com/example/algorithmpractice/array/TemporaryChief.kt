package com.example.algorithmpractice.array

import java.util.*


/**11. 임시반장 정하기
@since 2023.1.4.Wed
설명
김갑동 선생님은 올해 6학년 1반 담임을 맡게 되었다.
김갑동 선생님은 우선 임시로 반장을 정하고 학생들이 서로
친숙해진 후에 정식으로 선거를 통해 반장을 선출하려고 한다.
그는 자기반 학생 중에서 1학년부터 5학년까지 지내오면서
한 번이라도 같은 반이었던 사람이 가장 많은 학생을 임시 반장으로
정하려고한다.
그래서 김갑동 선생님은 각 학생들이 1학년부터 5학년까지 몇 반에 속했었는지를
나타내는 표를 만들었다.
예를 들어 학생 수가 5명일 때의 표를 살펴보자.

1학년 2학년 3학년 4학년 5학년
1번   2    3    1   7    3
2번   4    1    9   6    8
3번   5    5    2   4    4
4번   6    5    2   6    7
5번   8    4    2   2    2

위 경우에 4번 학생을 보면 3번 학생과 2학년 때 같은 반이었고,
3번 학생 및 5번 학생과 3학년 때 같은 반이었으며,
같은 반이었던 사람은 2번 학생, 3번 학생과 5번 학생으로 모두 3명이다.
이 예에서 4번 학생이 전체 학생 중에서 같은 반이었던 학생 수가 제일 많으므로
임시 반장이 된다. 각 학생들이 1학년부터 5학년까지 속했던 반이 주어질 때,
임시 반장을 정하는 프로그램을 작성하시오.

입력
첫째 줄에는 반의 학생 수를 나타내는 정수가 주어진다. 학생 수는 3 이상 100 이하이다.
둘째 줄부터는 1번 학생부터 차례대로 각 줄마다 1학년부터 5학년까지 몇 반에
속했었는지를 나타내는 5개의 정수가 빈칸 하나를 사이에 두고 주어진다.
주어지는 정수는 모두 1이상 9 이하의 정수이다.

출력
첫 줄에 임시 반장으로 정해진 학생의 번호를 출력한다.
단, 임시 반장이 될 수 있는 학생이 야러 명인 경우에는
그 중 작은 번호만 출력한다.



예시 입력 1
5
2 3 1 7 3
4 1 9 6 8
5 5 2 4 4
6 5 2 6 7
8 4 2 2 2

예시 출력 1
4

 */
/*
[풀기 전]
arr[행][열]
이중 for문 실행
i는 1부터 n까지 : 기준
j는 1부터 n까지 : 비교
k는 1부터 5까지(5학년)
행: 학생번호
열: 학년
i번 학생과 같은 반을 했던 j번 학생은 몇 명 있는지
k학년을 돌면서 확인
arr의 i번 학생의 k학년과 arr j번 학생의 k학년의 반이 같은지
arr[i][k] == arr[j][k]
학생번호 학년    학생번호 학년
i반 학생과 j반 학생의 학년이 같으면
count++
한 명의 학생과 같은 반이 여러번 되었어도 학생 수만 계산해야하므로 break
[풀고 난 후]

*/

private fun solutionCode(n: Int, arr: Array<Array<Int>>): Int {
    var answer = 0
    var max = 0

    for (i in 1 until n + 1) {
        var cnt = 0
        for (j in 1 until n + 1) {
            for (k in 1..5) { //학년
                if (arr[i][k] == arr[j][k]) {
                    cnt += 1
                    break //k for문 빠져나감

                }


            }

        }

        if (cnt > max) {
            max = cnt
            answer = i
        }
    }

    return answer
}

fun main() {
    val sc = Scanner(System.`in`)
    val num = sc.nextInt()
    val arr = Array(num + 1) { Array(6) { 0 } }
    for (i in 1..num) {
        for (j in 1..5) {
            arr[i][j] = sc.nextInt()
        }
    }

    println(solutionCode(num, arr))


}